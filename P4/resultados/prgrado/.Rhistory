print(paste0("SOLUCIÓN PARA PROBLEMA CON ",expression(beta)," IGUAL A ",c[i,2]))
print(paste0("SOLUCIÓN PARA PROBLEMA CON ",expression(\beta)," IGUAL A ",c[i,2]))
print(paste0("SOLUCIÓN PARA PROBLEMA CON ",substitute(beta)," IGUAL A ",c[i,2]))
print(paste0("SOLUCIÓN PARA PROBLEMA CON ",substitute(~beta)," IGUAL A ",c[i,2]))
print(paste0("SOLUCIÓN PARA PROBLEMA CON ",expression(~beta)," IGUAL A ",c[i,2]))
print(paste0("SOLUCIÓN PARA PROBLEMA CON ",expression(mu)," IGUAL A ",c[i,2]))
print(paste0("SOLUCIÓN PARA PROBLEMA CON ",expression(paste(mu))," IGUAL A ",c[i,2]))
expression(paste(mu))
expression(paste("Phase Angle ", phi))
print(expression(paste("Phase Angle ", phi)))
alpha
print(alpha)
print("alpha")
print(expression(alpha))
set.seed(1)  # for reproducible, pseudo-random numbers
betas <- rnorm(1000)
hist(betas, main = expression(beta))
set.seed(1)  # for reproducible, pseudo-random numbers
betas <- rnorm(1000)
hist(betas, main = expression(beta))
c <- matrix(c(1,1,1,2.9,3,3.1), ncol=2)
for(i in 1:3){
print(paste0("SOLUCIÓN PARA PROBLEMA CON PARÁMETRO IGUAL A ",c[i,2]))
coef <- c[i, ]
A <- matrix(c(2, -1, 3, 1), ncol=2)
b <- c(6, 1)
dir <- rep('<=', 2)
solucion <- solveLP(coef, b, A, maximum=TRUE, dir, verbose=3)
summary(solucion)
}
help
solveLP(c, b, A, dir, verbose=1)
c <- c(0,1,-3,0,2,0)
A <- matrix(c(c(1,0,0),c(3,-2,-4),c(-1,4,3),c(0,1,0),c(2,0,8),c(0,0,1)), ncol=6)
b <- c(7, 12, 10)
dir <- rep('=', 3)
solveLP(c, b, A, dir, verbose=1)
dir <- rep('<=', 3)
solveLP(c, b, A, dir, verbose=1)
dir <- rep('>=', 3)
solveLP(c, b, A, dir, verbose=1)
solveLP(c, b, A, maximum=FALSE, dir, verbose=1)
dir <- rep('=', 3)
solveLP(c, b, A, maximum=FALSE, dir, verbose=1)
dir <- rep('>=', 3)
solveLP(c, b, A, maximum=FALSE, dir, verbose=1)
dir <- rep('=', 3)
solveLP(c, b, A, maximum=FALSE, dir, verbose=1)
solveLP(c, b, A, maximum=TRUE, dir, verbose=1)
FALSE
solveLP(c, b, A, maximum=FALSE, dir, verbose=1)
solveLP(c, b, A, maximum=FALSE, dir, verbose=4)
sol <- solveLP(c, b, A, maximum=FALSE, dir, verbose=4)
solveLP(c, b, A, maximum=FALSE, dir, verbose=4)
y <- c(4,2,5,8,22,-3,9,-7,10)
sort(y)
sum(a)
a = c(1,2,3,4,5,6)
sum(a)
sum(a,3)
sum(a[1:3])
y <- c(4,2,5,8,22,-3,9,-7,10)
#Se ordena el vector de mayor a menor:
sort(y, decreasing = TRUE)
n = length(y)
n
solOptima = c(0,0,0)
valor = -1;
for(i in 1:n){
c <- c(sum(a[1:i])-sum(a[i:n]), -n-2*i, n-2*i)
A <- matrix(c(1,0,0,0,-1,1,0,-1,1), ncol=3)
b <- c(sum(a[1:i])-sum(a[i:n]), a[i], a[i+1])
dir <- c('=','<=','>=')
solucion <- lp('max', coef, A, dir, b, all.int=TRUE)
if((valor==-1)|(valor < solucion$objval)){
valor <- solucion$objval
solOptima <- solucion$solution
}
}
solOptima
valor
n = length(y)
solOptima = c(0,0,0)
valor = -1;
for(i in 1:n){
c <- c(sum(a[1:i])-sum(a[i:n]), -n-2*i, n-2*i)
A <- matrix(c(1,0,0,0,-1,1,0,-1,1), ncol=3)
b <- c(sum(a[1:i])-sum(a[i:n]), a[i], a[i+1])
dir <- c('=','<=','>=')
solucion <- lp('min', coef, A, dir, b)
if((valor==-1)|(valor < solucion$objval)){
valor <- solucion$objval
solOptima <- solucion$solution
}
}
c <- c(sum(a[1:i])-sum(a[i:n]), -n-2*i, n-2*i)
c
sum(a[1:1])
sum(a[1:i])
sum(a[i:n])
-sum(a[i:9])
a
y <- c(4,2,5,8,22,-3,9,-7,10)
#Se ordena el vector de mayor a menor:
sort(y, decreasing = TRUE)
n = length(y)
solOptima = c(0,0,0)
valor = -1;
for(i in 1:n){
c <- c(sum(y[1:i])-sum(y[i:n]), -n-2*i, n-2*i)
A <- matrix(c(1,0,0,0,-1,1,0,-1,1), ncol=3)
b <- c(sum(y[1:i])-sum(y[i:n]), y[i], y[i+1])
dir <- c('=','<=','>=')
solucion <- lp('min', coef, A, dir, b)
if((valor==-1)|(valor < solucion$objval)){
valor <- solucion$objval
solOptima <- solucion$solution
}
}
sum(y[1:i])-sum(y[i:n])
-n-2*i
c <- c(sum(y[1:i])-sum(y[i:n]), -n-2*i, n-2*i)
n
solOptima
valor
solOptima = c(0,0,0)
solOptima
A
b
1:3
for(i in 1:n-1){
print(paste(i))
}
for(i in 2:n-1){
print(paste(i))
}
for(i in 1:3){
print(paste(i))
}
coef <-c(20, 30)
A <- matrix(c(3, 1, 1, 6, 0.5, 1), ncol=2)
b <- c(150, 22, 27.5)
dir <- rep('<=', 3)
solucion <- lp('max', coef, A, dir, b)
solucion$objval
solucion$solution
# Programación entera
solucion <- lp('max', coef, A, dir, b, all.int=TRUE)
solucion$solution
solucion$solution[2]
A <- matrix(c(1,0,0,0,-1,1,0,-1,1), ncol=3)
A
A <- matrix(c(1,0,0,0,-1,1,0,-1,1), ncol=3)
b <- c(58, 8, 5)
dir <- c('=','<=','>=')
solucion <- lp('min', coef, A, dir, b)
solucion$solution
c <- c(-6, 2)
A <- matrix(c(1,0,0,1,0,1), ncol=2)
b <- c(1, 4, 2)
dir <- c('=','<=','>=')
solucion <- lp('min', coef, A, dir, b)
solucion$solution
c <- c(-6, 2)
A <- matrix(c(1,0,0,1,0,1), ncol=2)
b <- c(1, 4, 2)
dir <- c('=','<=','>=')
solucion <- lp('min', c, A, dir, b)
solucion$solution
A
c <- c(-6, 2)
A <- matrix(c(1,0,0,0,1,1), ncol=2)
b <- c(1, 4, 2)
dir <- c('=','<=','>=')
solucion <- lp('min', c, A, dir, b)
solucion$solution
c <- c(-6, 2)
A <- matrix(c(1,0,0,1), ncol=2)
b <- c(1, 4)
dir <- c('=','>=')
solucion <- lp('min', c, A, dir, b)
solucion$solution
c <- c(58, -1, 1)
A <- matrix(c(1,0,0,0,-1,1,0,-1,1), ncol=3)
b <- c(1, 8, 5)
dir <- c('=','<=','>=')
solucion <- lp('min', c, A, dir, b)
solucion$solution
c
A
b
c <- c(4, 2)
A <- matrix(c(1,0,0,0,1,1), ncol=2)
b <- c(1, 7, 4)
dir <- c('=','<=', '>=')
solucion <- lp('min', c, A, dir, b)
solucion$solution
c <- c(4, -2, 2)
A <- matrix(c(1,0,0,0,-1,1,0,-1,1), ncol=3)
b <- c(1, 7, 4)
dir <- c('=','<=', '>=')
solucion <- lp('min', c, A, dir, b)
solucion$solution
A
c <- c(4, -2, 2)
A <- matrix(c(1,0,0,0,-1,-1,0,1,1), ncol=3)
b <- c(1, 7, 4)
dir <- c('=','<=', '>=')
solucion <- lp('min', c, A, dir, b)
solucion$solution
c <- c(58, -1, 1)
A <- matrix(c(1,0,0,0,-1,-1,0,1,1), ncol=3)
b <- c(1, 8, 5)
dir <- c('=','<=','>=')
solucion <- lp('min', c, A, dir, b)
solucion$solution
c <- c(4, 0, 0)
A <- matrix(c(1,0,0,0,-1,-1,0,1,1), ncol=3)
b <- c(1, 7, 4)
dir <- c('=','<=', '>=')
solucion <- lp('min', c, A, dir, b)
solucion$solution
c <- c(-6, -1, 1)
A <- matrix(c(1,0,0,0,-1,1,0,-1,1), ncol=3)
b <- c(1, 8, 5)
dir <- c('=','<=','>=')
solucion <- lp('min', c, A, dir, b)
solucion$solution
c <- c(-6, -1, 1)
A <- matrix(c(1,0,0,0,-1,-1,0,1,1), ncol=3)
b <- c(1, 8, 5)
dir <- c('=','<=','>=')
solucion <- lp('min', c, A, dir, b)
solucion$solution
c <- c(58, -1, 1)
A <- matrix(c(1,0,0,0,-1,-1,0,1,1), ncol=3)
b <- c(1, 8, 5)
dir <- c('=','<=','>=')
solucion <- lp('min', c, A, dir, b)
solucion$solution
A <- matrix(c(1,0,0,1,0,1), ncol=3)
A
c <- c(58, 1)
A <- matrix(c(1,0,0,1,0,1), ncol=3)
b <- c(1, 8, 5)
dir <- c('=','<=','>=')
solucion <- lp('min', c, A, dir, b)
solucion$solution
c
A
b
solucion <- lp('min', c, A, dir, b)
solucion$solution
solucion <- lp('min', c, A, dir, b)
c <- c(58, 1)
A <- matrix(c(1,0,0,1,0,1), ncol=2)
A <- matrix(c(1,0,0,0,1,1), ncol=2)
A
c <- c(58, 1)
A <- matrix(c(1,0,0,0,1,1), ncol=2)
b <- c(1, 8, 5)
dir <- c('=','<=','>=')
solucion <- lp('min', c, A, dir, b)
solucion$solution
c <- c(sum(y[1:i])-sum(y[i:n]), -n-2*i, n-2*i)
c
y <- c(4,2,5,8,22,-3,9,-7,10)
#Se ordena el vector de mayor a menor:
y <- sort(y, decreasing = TRUE)
y
n = length(y)
solOptima = c(0,0,0)
valor = -1;
c <- c(sum(y[1:i])-sum(y[i:n]), -n-2*i, n-2*i)
c
i
sum(y[1:i])-sum(y[i:n])
sum(y[1:i])
sum(y[i:n])
c <- c(sum(y[1:i])-sum(y[i+1:n]), -n-2*i, n-2*i)
c
c <- c(sum(y[1:i])-sum(y[i+1:n]), -n-2*i, n-2*i)
c <- c(sum(y[1:i])-sum(y[(i+1):n]), -n-2*i, n-2*i)
c
A <- matrix(c(1,0,0,0,-1,-1,0,1,1), ncol=3)
A
b <- c(1, y[i], y[i+1])
b
dir <- c('=','<=','>=')
solucion <- lp('min', c, A, dir, b)
solucion$objval
solucion$solution
c <- c(sum(y[1:i])-sum(y[(i+1):n]), -n-2*i, n-2*i)
c
c <- c(sum(y[1:i])-sum(y[(i+1):n]), -(n-2*i), n-2*i)
c
A <- matrix(c(1,0,0,0,-1,-1,0,1,1), ncol=3)
b <- c(1, y[i], y[i+1])
dir <- c('=','<=','>=')
solucion <- lp('min', c, A, dir, b)
solucion$objval
solucion$solution
i
c
c <- c(sum(y[1:i])-sum(y[(i+1):n]), n-2*i)
c
c
A
A <- matrix(c(1,0,0,0,1,1), ncol=2)
b
b
dir <- c('=','<=','>=')
solucion <- lp('min', c, A, dir, b)
solucion$objval
solucion$solution
i=8
c <- c(sum(y[1:i])-sum(y[(i+1):n]), -(n-2*i), n-2*i)
c
A
b
b <- c(1, y[i], y[i+1])
b
dir <- c('=','<=','>=')
solucion <- lp('min', c, A, dir, b)
solucion$objval
c <- c(sum(y[1:i])-sum(y[(i+1):n]), n-2*i)
c
A <- matrix(c(1,0,0,0,1,1), ncol=2)
b <- c(1, y[i], y[i+1])
b
dir <- c('=','<=','>=')
solucion <- lp('min', c, A, dir, b)
solucion$objval
solucion$solution
c <- c(sum(y[1:i])-sum(y[(i+1):n]), -(n-2*i), n-2*i)
c
A
A <- matrix(c(1,0,0,0,-1,-1,0,1,1), ncol=3)
b <- c(1, y[i], y[i+1])
b
A
dir <- c('=','<=','>=')
solucion <- lp('min', c, A, dir, b)
solucion$objval
solucion$solution
c <- c(58, -1, 1)
A <- matrix(c(1,0,0,0,-1,-1,0,1,1), ncol=3)
b <- c(1, 8, 5)
dir <- c('=','<=','>=')
solucion <- lp('min', c, A, dir, b)
solucion$solution
solucion$objval
solucion$solution
sum(y)
A
A <- matrix(c(1,0,0,-1,0,1), ncol=3)
A
c <- c(-sum(y), n, -n)
A <- matrix(c(1,0,0,-1,0,1), ncol=3)
b <- c(1, y[1])
dir <- c('=','>=')
solucion <- lp('min', c, A, dir, b)
solucion$objval
solucion$solution
c
A
b
dir <- c('=','>=')
solucion <- lp('min', c, A, dir, b)
solucion$objval
c <- c(-sum(y), -n, n)
A <- matrix(c(1,0,0,-1,0,1), ncol=3)
b <- c(1, y[1])
dir <- c('=','>=')
solucion <- lp('min', c, A, dir, b)
solucion$objval
solucion$solution
infinite
1/0
Inf
-Inf
c <- c(-sum(y), n, -n)
A <- matrix(c(1,0,0,-1,0,1), ncol=3)
b <- c(1, y[1])
dir <- c('=','<=')
solucion <- lp('min', c, A, dir, b)
solucion$objval
solucion$solution
c <- c(-sum(y), n, -n)
A <- matrix(c(1,0,0,-1,0,1), ncol=3)
c <- c(sum(y), n, -n)
A <- matrix(c(1,0,0,-1,0,1), ncol=3)
b <- c(1, y[n])
dir <- c('=','<=')
solucion <- lp('min', c, A, dir, b)
solucion$objval
solucion$solution
echo(paste0("Finalizado el algoritmo el valor óptimo es: ",valor))
cbind(4,4)
rnorm(4)
runif(4)
funcion_a<-function(n, B) {
set.seed(100)
for(i in 1:B){
puntos <- cbind(runif(n),runif(n))
indices <- chull(puntos)
resultado[i]=length(indices)
}
#Valor de retorno
resultado
}
n=50
B=10
set.seed(100)
for(i in 1:B){
puntos <- cbind(runif(n),runif(n))
indices <- chull(puntos)
resultado[i]=length(indices)
}
set.seed(100)
resultado = rep(0,B)
for(i in 1:B){
puntos <- cbind(runif(n),runif(n))
for(i in 1:B){
puntos <- cbind(runif(n),runif(n))
indices <- chull(puntos)
resultado[i]=length(indices)
}
resultado
resultado
)
resultado = rep(0,B)
resultado
for(i in 1:B){
puntos <- cbind(runif(n),runif(n))
indices <- chull(puntos)
resultado[i]=length(indices)
}
resultado
funcion_a(50,10)
valores <- funcion_a(100,10000)
mean(valores)
sd(valores)
hist(valores, xLab="número de vértices del cierre convexo")
hist(valores, xlab="número de vértices del cierre convexo")
hist(valores, xlab="número de vértices del cierre convexo", ylab="frecuencia", title="a")
hist(valores, xlab="número de vértices del cierre convexo", ylab="frecuencia", main = paste("Histograma")
)
valores <- funcion_a(100,10000)
mean(valores)
sd(valores)
valores <- funcion_a(100,10000)
mean(valores)
setwd("~/Escritorio/repositorios/BMinf/P4/resultados/prgrado")
#Si cambias la variable pch por "*", salen mas gordos los puntos que con ".", no se que  queda mejor.
datos = read.table("erdos_pr-grado.txt")
x <- datos$V1
y <- datos$V2
png('erdos_pr-grado')
plot(x,log(y))
dev.off()
datos = read.table("twitter_pr-grado.txt")
x <- datos$V1
y <- datos$V2
png('twitter_pr-grado')
plot(x,log(y))
dev.off()
datos = read.table("fb_pr-grado.txt")
x <- datos$V1
y <- datos$V2
png('fb_pr-grado')
plot(x,log(y))
dev.off()
plot(log(x),log(y))
#Si cambias la variable pch por "*", salen mas gordos los puntos que con ".", no se que  queda mejor.
datos = read.table("erdos_pr-grado.txt")
x <- datos$V1
y <- datos$V2
png('erdos_pr-grado')
plot(log(x),log(y))
dev.off()
datos = read.table("twitter_pr-grado.txt")
x <- datos$V1
y <- datos$V2
png('twitter_pr-grado')
plot(log(x),log(y))
dev.off()
datos = read.table("fb_pr-grado.txt")
x <- datos$V1
y <- datos$V2
png('fb_pr-grado')
plot(log(x),log(y))
dev.off()
#Si cambias la variable pch por "*", salen mas gordos los puntos que con ".", no se que  queda mejor.
datos = read.table("erdos_pr-grado.txt")
x <- datos$V1
y <- datos$V2
png('erdos_pr-grado')
plot(log(x),y, pch="*")
dev.off()
datos = read.table("twitter_pr-grado.txt")
x <- datos$V1
y <- datos$V2
png('twitter_pr-grado')
plot(log(x),y, pch="*")
dev.off()
datos = read.table("fb_pr-grado.txt")
x <- datos$V1
y <- datos$V2
png('fb_pr-grado')
plot(log(x),y, pch="*")
dev.off()
