Notas para cazakas:

1) Ejecutar ContentsRocchioTest.java y comprobar que funciona el test. Si en algún momento te pones a tocar cosas y quieres saber si lo mío sigue funcionando, aquí lo tienes. Te recomendaría que tu recomendador tuviera un test así también.
Este test utiliza el ejemplo de las traspas (que para contenidos si está hecho. Para filtrado colaborativo no lo se... siempre puedes hacerte un fichero a mano para comprobar más facilmente).

2) Ir ejecutando paso a paso (real o mentalmente) y ver qué pasos se van dando.

Lo primero cargar contenidos (que tiene bastante enjundia) y calcular centroides (para el caso de Rocchio)

Como los detalles concretos de Rocchio no son relevantes, no los he explicado. 


Vamos con la carga de contenidos. el método loadContents y loadUserMatrix ambos llaman a CargarMatriz de la clase abstracta RecommenderAbs.java. Esta clase tiene muchos comentarios muy relevantes.

Una vez intuido como va, echarle un ojo a los FilterCallable para saber porqué existen. El plan es que haya un filterCallable por cada fichero que queramos leer. Ahora hay 2 para los 2 ficheros de pruebas que he necesitado. La segunda parte del plan es que al definir un FilterCallable para el fichero movies.dat, y tocando lo mínimo que hace falta en CargarMatriz, funcione bien. Esa es la idea claro...


3) Estoy algo cansado, espero que estas notas no sean ofensivas por ser demasiado explícitas en algunos puntos y espero no haberme dejado cosas relevantes por explicar y que se entienda. 





